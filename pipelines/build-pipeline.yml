# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: windows-2019

steps:
- task: DotNetCoreCLI@2
  displayName: 'DotNetBuild'
  inputs:
    command: 'build'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'DotNetTest'
  inputs:
    command: 'test'
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'DotNetPack'
  inputs:
    command: 'pack'
    packagesToPack: 'TMFileParser/TMFileParser/TMFileParser.csproj'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'

- task: DotNetCoreCLI@2
  displayName: 'DotNetPublishLinux'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'TMFileParser/TMFileConverter/TMFileConverter.csproj'
    arguments: '-r linux-x64 -p:PublishSingleFile=False -o $(Build.ArtifactStagingDirectory)/linux-x64'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  displayName: 'DotNetPublishMacOS'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'TMFileParser/TMFileConverter/TMFileConverter.csproj'
    arguments: '-r osx.11.0-x64 -p:PublishSingleFile=False -o $(Build.ArtifactStagingDirectory)/macOS-arm'
    zipAfterPublish: false

- task: DotNetCoreCLI@2
  displayName: 'DotNetPublishWindows'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: 'TMFileParser/TMFileConverter/TMFileConverter.csproj'
    arguments: '-r win-x64 -p:PublishSingleFile=False -o $(Build.ArtifactStagingDirectory)/windows-x64'
    zipAfterPublish: false

- task: CredScan@3
  inputs:
    verboseOutput: true

- task: RoslynAnalyzers@3
  inputs:
    userProvideBuildInfo: 'msBuildInfo'
    msBuildVersion: '16.0'
    msBuildArchitecture: 'amd64'
    msBuildCommandline: 'dotnet.exe build $(Build.SourcesDirectory)\TMFileParser\TMFileParser.sln'

- task: BinSkim@4
  inputs:
    InputType: 'CommandLine'
    arguments: 'analyze $(Build.SourcesDirectory)\* --recurse --sympath "Srv*http://msdl.microsoft.com/download/symbols" --verbose'

- task: Semmle@1
  inputs:
    sourceCodeDirectory: '$(Build.SourcesDirectory)'
    language: 'csharp'
    buildCommandsString: 'dotnet.exe clean $(Build.SourcesDirectory)\TMFileParser\TMFileParser.sln && dotnet.exe build $(Build.SourcesDirectory)\TMFileParser\TMFileParser.sln'
    querySuite: 'Recommended'
    timeout: '1800'
    ram: '6384'
    addProjectDirToScanningExclusionList: true

- task: SdtReport@2
  inputs:
    GdnExportHtmlFile: true
    GdnExportAllTools: false
    GdnExportGdnToolBinSkim: true
    GdnExportGdnToolSemmle: true

- task: PublishSecurityAnalysisLogs@3
  inputs:
    ArtifactName: 'CodeAnalysisLogs'
    ArtifactType: 'Container'
    AllTools: false
    AntiMalware: false
    APIScan: false
    Armory: false
    Bandit: false
    BinSkim: true
    CodesignValidation: false
    CredScan: true
    CSRF: false
    ESLint: false
    Flawfinder: false
    FortifySCA: false
    FxCop: false
    ModernCop: false
    MSRD: false
    PoliCheck: false
    RoslynAnalyzers: true
    SDLNativeRules: false
    Semmle: true
    SpotBugs: false
    TSLint: false
    WebScout: false
    ToolLogsNotFoundAction: 'Standard'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '2.1.804'

- task: EsrpCodeSigning@1
  inputs:
    ConnectedServiceName: 'ESRP Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'TMFileParser.dll,TMFileConverter.exe'
    signConfigType: 'inlineSignParams'
    inlineOperation:  |
          [
                  {
                      "KeyCode" : "CP-230012",
                      "OperationCode" : "SigntoolSign",
                      "Parameters" : {
                          "OpusName" : "Microsoft",
                          "OpusInfo" : "http://www.microsoft.com",
                          "FileDigest" : "/fd \"SHA256\"",
                          "PageHash" : "/NPH",
                          "TimeStamp" : "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
                      },
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  },
                  {
                      "KeyCode" : "CP-230012",
                      "OperationCode" : "SigntoolVerify",
                      "Parameters" : {},
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  }
              ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: EsrpCodeSigning@1
  inputs:
    ConnectedServiceName: 'ESRP Signing'
    FolderPath: '$(Build.ArtifactStagingDirectory)'
    Pattern: 'TMFileParser*.nupkg'
    signConfigType: 'inlineSignParams'
    inlineOperation:  |
          [
                  {
                      "KeyCode" : "CP-401405",
                      "OperationCode" : "NuGetSign",
                      "Parameters" : {},
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  },
                  {
                      "KeyCode" : "CP-401405",
                      "OperationCode" : "NuGetVerify",
                      "Parameters" : {},
                      "ToolName" : "sign",
                      "ToolVersion" : "1.0"
                  }
              ]
    SessionTimeout: '60'
    MaxConcurrency: '50'
    MaxRetryAttempts: '5'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

